
groups:
- name: main
  jobs:
  - Version-Job  
  - Build-UnitTest-Job 
  - SonarScan-Job
  - PCFDeploy-Job

resources:
- name: angular-app
  type: git
  source:
    branch: master
    uri: https://github.com/buggavep/angular-app.git

- name: ci
  type: git
  source:
    branch: master
    uri: https://github.com/buggavep/ci.git

- name: version-gist
  type: git
  source:
    branch: master
    uri: git@gist.github.com:8138f5263ca1b8952264e4f13fc3a1eb.git
    private_key: {{github-private-key}}

- name: PCFdeploy
  type: cf
  source:
    api: {{cf-endpoint}}
    username: {{cf-username}}
    password: {{cf-password}}
    organization: {{cf-organization}}
    space: {{cf-space}}
    skip_cert_check: true

# - name: artifactory-snapshot
#   type: artifactory
#   source:
#     endpoint: {{artifactory-endpoint}}
#     repository: {{artifactory-repo}}
#     regex: {{artifactory-regex}}
#     username: {{artifactory-username}}
#     password: {{artifactory-password}}
#     skip_ssl_verification: true

resource_types:
- name: artifactory
  type: docker-image
  source:
    repository: pivotalservices/artifactory-resource

- name: sonar-runner
  type: docker-image
  source:
    repository: cathive/concourse-sonarqube-resource

jobs:
- name: Version-Job
  serial: true
  public: true
  plan:
  - get: angular-app
    trigger: true  
  - get: ci 
  - get: version-gist
  - task: Versioning the App
    file: ci/concourse/version.yml
    input_mapping: {code-repo: angular-app, ci: ci, version-gist: version-gist}
  - put: version-gist
    params: {repository: updated-gist}

- name: Build-UnitTest-Job
  serial: true
  public: true
  plan:
  - get: angular-app
    passed: [Version-Job]
    trigger: true  
  - get: version-gist
  - get: ci 
  # - get: artifactory
  #   resource: artifactory-snapshot
  - task: Build App
    file: ci/concourse/build.yml
    input_mapping: {code-repo: angular-app, ci: ci, dist: dist, version-gist: version-gist}
    # params:
    #   ARTIFACTORY_USERNAME: {{artifactory-username}}
    #   ARTIFACTORY_PASSWORD: {{artifactory-password}}
  # - put: artifactory-snapshot
  #   params: 
  #     file: dist/cibuild.tar.gz

- name: SonarScan-Job
  serial: true
  public: true
  plan:
  - get: angular-app
    passed: [Build-UnitTest-Job]
    trigger: true  
  - get: ci 
  - task: Sonar Scan Task
    file: ci/concourse/sonar-scan.yml
    input_mapping: {code-repo: angular-app, ci: ci, dist: dist, version-gist: version-gist}

- name: PCFDeploy-Job
  serial: true
  public: true
  plan:
  - get: angular-app
    passed: [SonarScan-Job]
    trigger: true  
  # - get: artifactory-snapshot
  - get: ci 
  - task: Build App
    file: ci/concourse/build.yml
    input_mapping: {code-repo: angular-app, ci: ci, dist: dist, version-gist: version-gist}
  - task: PCF Deploy Task
    file: ci/concourse/cfdeploy.yml
    input_mapping: {code-repo: angular-app, ci: ci, dist: dist, version-gist: version-gist}
  - put: PCFdeploy
    params:
      manifest: angular-app/manifest.yml
      path: angular-app
